buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenLocal()
		maven {
			url 'http://maven.aliyun.com/nexus/content/groups/public/'
		}
		maven {
			url 'https://repo.spring.io/plugins-release'
		}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
	jsonPathVersion = '2.0.0'
	mybatisVersion = '1.3.1'
	druidVersion = '1.1.2'
	flowableVersion = '6.1.2'
}

configurations {
	mybatisGenerator
}

dependencies {

	// Compile dependencies.
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-freemarker')
	compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}"
	compile('org.springframework.boot:spring-boot-starter-web')
	compile "com.alibaba:druid-spring-boot-starter:${druidVersion}"
    compile 'com.alibaba:fastjson:1.2.31'
	compile 'org.projectlombok:lombok:1.16.18'
	compile 'org.springframework.boot:spring-boot-devtools'
	compile 'com.google.guava:guava:22.0'
	compile 'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.0'
	compile 'org.apache.commons:commons-lang3:3.5'
	compile 'com.fasterxml.uuid:java-uuid-generator:3.1.4'
	//flowable
	compile "org.flowable:flowable-spring-boot-starter-basic:${flowableVersion}"
	compile  "org.flowable:flowable-json-converter:${flowableVersion}"
	compile 'cn.hutool:hutool-all:4.0.9'
	//compile  "org.flowable:flowable-bpmn-model:${flowableVersion}"
	//compile "org.flowable:flowable-engine:${flowableVersion}"

	//compile 'org.springframework.batch:spring-batch-core:3.0.8.RELEASE'
	// tools
	compile 'commons-beanutils:commons-beanutils:1.9.3'
	compile 'org.apache.httpcomponents:httpclient:4.5.2'

	//mybatis generator
	mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.6'
	mybatisGenerator 'tk.mybatis:mapper:3.5.2'
	mybatisGenerator 'mysql:mysql-connector-java:5.1.44'

	// Runtime dependencies.
	runtime "mysql:mysql-connector-java"
	// Test dependencies.
	testCompile ("org.springframework.boot:spring-boot-starter-test")

	testCompile "com.jayway.jsonpath:json-path:${jsonPathVersion}"
	testCompile "com.jayway.jsonpath:json-path-assert:${jsonPathVersion}"
}

def getDbProperties = {
	def properties = new Properties()
	file("src/main/resources/mybatis/config.properties").withInputStream { inputStream ->
		properties.load(inputStream)
	}
	properties
}

task mybatisGenerate {
	doLast {
		def properties = getDbProperties()
		ant.properties['targetProject'] = projectDir.path
		ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
		ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
		ant.properties['userId'] = properties.getProperty("jdbc.username")
		ant.properties['password'] = properties.getProperty("jdbc.password")
		ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
		ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
		ant.properties['modelPackage'] = properties.getProperty("package.model")
		ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
		ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
		ant.properties['tableName'] = properties.getProperty("table.name")
		ant.taskdef(
				name: 'mbgenerator',
				classname: 'org.mybatis.generator.ant.GeneratorAntTask',
				classpath: configurations.mybatisGenerator.asPath
		)
		ant.mbgenerator(overwrite: true,
				configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
			propertyset {
				propertyref(name: 'targetProject')
				propertyref(name: 'userId')
				propertyref(name: 'driverClass')
				propertyref(name: 'connectionURL')
				propertyref(name: 'password')
				propertyref(name: 'src_main_java')
				propertyref(name: 'src_main_resources')
				propertyref(name: 'modelPackage')
				propertyref(name: 'mapperPackage')
				propertyref(name: 'sqlMapperPackage')
				propertyref(name: 'tableName')
			}
		}
	}

}
